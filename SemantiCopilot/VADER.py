from nltk.sentiment import SentimentIntensityAnalyzer  # to know the sentiment of the words
from tqdm.notebook import tqdm   #a progress bar traacker

sia = SentimentIntensityAnalyzer()    #sentiment intensity analyzer object

sia.polarity_scores("Rahul is a good boy.") #just checking an example

sia.polarity_scores(eg)  #run on the example

# Run the polarity score on the selected dataset
res = {} # a dict to maintain polarity data with row id 
for i, row in tqdm(df.iterrows(), total = len(df)): #iterating over the dataframe with row id and row data and generating a progress bar, keeping the length of the data frame as length of the progress bar
    text = row['Text']
    id = row['Id']
    res[id] = sia.polarity_scores(text)

vaders = pd.DataFrame(res).T # a better visualization of the data stored in res
vaders  # display head

vaders = vaders.reset_index().rename(columns={'index':'Id'})  #reset index to be able to merge with the dataframe set and rename column of index for the same reason
vaders  # display head

vaders = vaders.merge(df, how='left')   # merge the vaders data with dataframe
# Sentiment Scores and Metadata
vaders.head()



# Plot VADER Results
ax = sns.barplot(data=vaders, x = 'Score', y = 'compound') # a  bar graph of star ratings given by customers v/s the compound score generated by VADER Model
ax.set_title('Compound Scores by Amazon Star Reviews')
plt.show

fig, axs = plt.subplots(1, 3, figsize=(15, 4))    # set size of bar graph and plot
sns.barplot(data=vaders, x = 'Score', y = 'pos', ax=axs[0])  # positive
sns.barplot(data=vaders, x = 'Score', y = 'neu', ax=axs[1])  # negtive
sns.barplot(data=vaders, x = 'Score', y = 'neg', ax=axs[2])  # neutral
axs[0].set_title('Positive')  #set titles
axs[1].set_title('Neutral')
axs[2].set_title('Negative')
plt.show()
